<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="UTF-8">
  <!--Gianmarco Bastianelli-->
  <title>Green Pepper</title>
  <style>
    body {
      margin: 0;
      font-family: sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    #game {
      background: #fafafa;
      border: 1px solid #333;
    }

    #resetBtn {
      margin-block-start: 10px;
      padding: 8px 16px;
      font-size: 16px;
      display: none;
    }

    #controls {
      display: grid;
      grid-template-areas:
        ". up ."
        "left . right"
        ". down .";
      grid-template-columns: 50px 50px 50px;
      grid-template-rows: 50px 50px 50px;
      gap: 5px;
      margin-block-start: 20px;
    }

    #controls button {
      inline-size: 50px;
      block-size: 50px;
      font-size: 24px;
      padding: 0;
    }

    #up {
      grid-area: up;
    }

    #down {
      grid-area: down;
    }

    #left {
      grid-area: left;
    }

    #right {
      grid-area: right;
    }
  </style>
</head>

<body>
  <canvas id="game" width="400" height="400"></canvas>
  <button id="resetBtn">Reset</button>
  <div id="controls">
    <button id="up">↑</button>
    <button id="left">←</button>
    <button id="down">↓</button>
    <button id="right">→</button>
  </div>

  <script>
    const canvas = document.getElementById('game');
    const ctx = canvas.getContext('2d');
    const box = 20;
    const size = 20;
    const resetBtn = document.getElementById('resetBtn');

    let snake, direction, food, gameLoop, isGameOver;

    function spawnFood() {
      return {
        x: Math.floor(Math.random() * size) * box,
        y: Math.floor(Math.random() * size) * box
      };
    }

    function init() {
      snake = [{ x: 9 * box, y: 9 * box }];
      direction = null;
      food = spawnFood();
      isGameOver = false;
      resetBtn.style.display = 'none';
      clearInterval(gameLoop);
      gameLoop = setInterval(draw, 100);
    }

    document.addEventListener('DOMContentLoaded', init);

    document.addEventListener('keydown', e => {
      if (e.key === 'Enter' && isGameOver) {
        init();
        return;
      }
      if (isGameOver) return;
      if (e.key === 'ArrowUp' && direction !== 'DOWN') direction = 'UP';
      if (e.key === 'ArrowDown' && direction !== 'UP') direction = 'DOWN';
      if (e.key === 'ArrowLeft' && direction !== 'RIGHT') direction = 'LEFT';
      if (e.key === 'ArrowRight' && direction !== 'LEFT') direction = 'RIGHT';
    });

    document.getElementById('up').addEventListener('click', () => { if (!isGameOver && direction !== 'DOWN') direction = 'UP'; });
    document.getElementById('down').addEventListener('click', () => { if (!isGameOver && direction !== 'UP') direction = 'DOWN'; });
    document.getElementById('left').addEventListener('click', () => { if (!isGameOver && direction !== 'RIGHT') direction = 'LEFT'; });
    document.getElementById('right').addEventListener('click', () => { if (!isGameOver && direction !== 'LEFT') direction = 'RIGHT'; });

    resetBtn.addEventListener('click', init);

    function draw() {
      // calcola nuova testa
      let headX = snake[0].x;
      let headY = snake[0].y;
      if (direction === 'LEFT') headX -= box;
      if (direction === 'RIGHT') headX += box;
      if (direction === 'UP') headY -= box;
      if (direction === 'DOWN') headY += box;

      // collisione
      const max = size * box;
      if (
        headX < 0 ||
        headY < 0 ||
        headX + box > max ||
        headY + box > max ||
        snake.some((seg, i) => i > 0 && seg.x === headX && seg.y === headY)
      ) {
        clearInterval(gameLoop);
        isGameOver = true;
        ctx.fillStyle = 'black';
        ctx.font = '36px sans-serif';
        ctx.textAlign = 'center';
        ctx.fillText('Game Over', canvas.width / 2, canvas.height / 2);
        resetBtn.style.display = 'inline-block';
        return;
      }

      // mangia?
      if (headX === food.x && headY === food.y) {
        food = spawnFood();
      } else {
        snake.pop();
      }

      snake.unshift({ x: headX, y: headY });

      // disegno
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.fillStyle = 'red';
      ctx.fillRect(food.x, food.y, box, box);
      snake.forEach((seg, i) => {
        ctx.fillStyle = i === 0 ? 'green' : 'lime';
        ctx.fillRect(seg.x, seg.y, box, box);
        ctx.strokeStyle = '#000';
        ctx.strokeRect(seg.x, seg.y, box, box);
      });
    }
  </script>
</body>

</html> 
